; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29336.0 

	TITLE	C:\Users\Giacomo\source\repos\VisualStudioNapeir\switch-cases.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_main
EXTRN	___acrt_iob_func:PROC
EXTRN	_fgets:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	_atoi:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_DATA	SEGMENT
$SG11579 DB	'1 - say hello', 0aH, 00H
	ORG $+1
$SG11580 DB	'2 - say goodbye', 0aH, 00H
	ORG $+3
$SG11582 DB	'Hello world!', 0aH, 00H
	ORG $+2
$SG11584 DB	'Goodbye world!', 0aH, 00H
$SG11586 DB	'***INVAALID INPUT***', 0aH, 00H
_DATA	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_number$1 = -28						; size = 4
_flag$ = -24						; size = 4
tv74 = -20						; size = 4
_buffer$2 = -16						; size = 10
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC
; File C:\Users\Giacomo\source\repos\VisualStudioNapeir\switch-cases.c
; Line 6
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 7
	mov	DWORD PTR _flag$[ebp], 1
$LN2@main:
; Line 8
	cmp	DWORD PTR _flag$[ebp], 0
	je	$LN3@main
; Line 9
	push	OFFSET $SG11579
	call	_printf
	add	esp, 4
; Line 10
	push	OFFSET $SG11580
	call	_printf
	add	esp, 4
; Line 12
	push	0
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	push	10					; 0000000aH
	lea	eax, DWORD PTR _buffer$2[ebp]
	push	eax
	call	_fgets
	add	esp, 12					; 0000000cH
; Line 13
	lea	ecx, DWORD PTR _buffer$2[ebp]
	push	ecx
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _number$1[ebp], eax
; Line 15
	mov	edx, DWORD PTR _number$1[ebp]
	mov	DWORD PTR tv74[ebp], edx
	cmp	DWORD PTR tv74[ebp], 1
	je	SHORT $LN6@main
	cmp	DWORD PTR tv74[ebp], 2
	je	SHORT $LN7@main
	jmp	SHORT $LN8@main
$LN6@main:
; Line 17
	push	OFFSET $SG11582
	call	_printf
	add	esp, 4
; Line 18
	jmp	SHORT $LN4@main
$LN7@main:
; Line 20
	push	OFFSET $SG11584
	call	_printf
	add	esp, 4
$LN8@main:
; Line 23
	push	OFFSET $SG11586
	call	_printf
	add	esp, 4
$LN4@main:
; Line 26
	jmp	$LN2@main
$LN3@main:
; Line 27
	xor	eax, eax
; Line 28
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\stdio.h
; Line 954
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 957
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 958
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 959
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 960
	mov	eax, DWORD PTR __Result$[ebp]
; Line 961
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\stdio.h
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 644
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
; Line 86
	push	ebp
	mov	ebp, esp
; Line 88
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 89
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
